<script lang="uts">
	import { onReconnectBlock } from '@/uni_modules/ace-bluetooth';
	import { setBluetoothState } from '@/store/index.uts'
	let firstBackTime = 0
	export default {
		onLaunch: function () {
			console.log('App Launch')
			this.onReconnect()
		},
		onShow: function () {
			console.log('App Show')
		},
		onHide: function () {
			console.log('App Hide')
		},
		// #ifdef APP-ANDROID
		onLastPageBackPress: function () {
			console.log('App LastPageBackPress')
			if (firstBackTime == 0) {
				uni.showToast({
					title: '再按一次退出应用',
					position: 'bottom',
				})
				firstBackTime = Date.now()
				setTimeout(() => {
					firstBackTime = 0
				}, 2000)
			} else if (Date.now() - firstBackTime < 2000) {
				firstBackTime = Date.now()
				uni.exit()
			}
		},
		// #endif

		onExit: function () {
			console.log('App Exit')
		},

		methods: {
			onReconnect() {
				setTimeout(() => {
					let reconnectStatus = 1
					onReconnectBlock((res) => {
						// 0:设备蓝牙断开(所有情况)
						//-1:设备非用户主动断开，尝试重新连接
						//-2:重连失败
						// 1:已订阅状态特征通知
						console.log("全局监听蓝牙状态:" + res)
						setBluetoothState(res)
						if (reconnectStatus != res) {
							switch (res) {
								case -1:
									reconnectStatus = res
									uni.showLoading({
										title: "蓝牙已断开，正在尝试重连...",
										mask: true
									})
									break;
								case -2:
									reconnectStatus = res
									uni.hideLoading();
									uni.showToast({
										title: "重新连接失败，请手动连接",
										icon: "error"
									})
									break;
								case 1:
									reconnectStatus = res
									uni.hideLoading();
									uni.showToast({
										title: "重新连接成功"
									})
									break;
								default:
									break;
							}
						}
					})
				}, 1000)
			},
		}
	}
</script>

<style>
	/*每个页面公共css */
	/* @import "./common/uni.css"; */
	/*每个页面公共css */
	/* 	.uni-row {
		flex-direction: row;
	}

	.uni-column {
		flex-direction: column;
	} */
</style>