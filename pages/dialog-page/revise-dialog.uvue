<template>
	<view id="dialog1" class="dialog-container">
		<view class="dialog-content">
			<text class="title">{{title}}</text>
			<text class="remark-text">{{ramarkTitle}}</text>

			<picker-view class="picker-view" indicator-style="height: 40px;" :value="value" @change="bindChange">
				<picker-view-column>
					<view class="picker-item" v-for="(item,index) in offsets" :key="index">
						<text class="picker-text">{{item}}°</text>
					</view>
				</picker-view-column>
			</picker-view>

			<view class="space-view">
				<button class="cancel-btn" @click="cancel">取消</button>
				<button class="save-btn" @click="save">保存</button>
			</view>
		</view>
	</view>
</template>

<script>
	export default {
		data() {
			const _offsets = Array.from({ length: 31 }, (_, i) => 30 - i);
			return {
				type: '' as string | null,
				title: '' as string | null,
				value: [0] as number[],
				ramarkTitle: '观察舵机当前位置，如若未居中请调整偏移角度，使舵机位置居中',
				offsets: _offsets as number[],
				pickerIndex: 0,
			};
		},

		onLoad(options) {
			if (options.data) {
				const obj = JSON.parse(decodeURIComponent(options.data));
				console.log(obj);
				this.title = obj.title
				this.type = obj.type
				const index = this.offsets.findIndex(item => item === obj.offset)
				this.pickerIndex = index
				this.value = [index]
			}
		},

		methods: {
			bindChange(e : UniPickerViewChangeEvent) {
				const val = e.detail.value
				this.pickerIndex = val[0]
			},
			cancel() {
				uni.closeDialogPage()
			},
			save() {
				const obj = { "type": this.type, "offset": this.offsets[this.pickerIndex] };
				uni.$emit('steering-engine', obj)
				uni.closeDialogPage()
			}
		}
	}
</script>

<style lang="scss">
	.dialog-container {
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.3);
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.dialog-content {
		width: 80%;
		padding: 20px;
		background-color: #fff;
		border-radius: 6px;
		display: flex;
		align-items: center;
	}

	.title {
		color: black;
		font-size: 18;
		font-weight: bold;
	}

	.remark-text {
		font-size: 13;
		line-height: 1.4;
		color: gray;
		margin-top: 15px;
	}

	.picker-view {
		width: 100%;
		height: 130px;
		margin-top: 15px;
		background-color: #d8e5ff;
	}

	.picker-item {
		height: 40px;
	}

	.picker-text {
		line-height: 40px;
		text-align: center;
	}

	.space-view {
		width: 80%;
		/* 水平居中 */
		align-items: center;
		/* 横向排列 */
		flex-direction: row;
		/* 两端布局 */
		justify-content: space-between;
		margin-top: 15px;
	}

	.cancel-btn {
		width: 80px;
		border-color: black;
		border-width: 1px;
	}

	.save-btn {
		width: 80px;
		background-color: black;
		color: white;
	}
</style>