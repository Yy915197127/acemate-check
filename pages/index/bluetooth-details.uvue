<template>
	<uni-navbar-lite :title="title" :is-back="false" :nc-color="'#f1f1f1'">
		<template v-slot:right>
			<button size="mini" style="width: 70px; padding: 0;" @click="quit">{{$t('global.ExitTest')}}</button>
		</template>
	</uni-navbar-lite>

	<view class="page">
		<view class="module-view">
			<view class="space-view">
				<text class="title">{{rssiTitle}}</text>
				<text>{{rssi}}db</text>
			</view>
			<text style="font-size: 13; color: gray; margin-top: 15px;">{{rssiRemark}}</text>
		</view>

		<view class="module-view" style="margin-top: 20px;">
			<text class="title">{{receiveSendDataTitle}}</text>
			<view class="space-view send-data-view">
				<text>{{sendDataTitle}}</text>
				<button style="border-color: black; border-width: 1px;" size="mini"
					@click="send()">{{$t('bluetoothDetails.Send')}}</button>
			</view>
			<view class="space-view send-data-view">
				<text>{{receiveDataTitle}}</text>
				<view :class="status ? 'on-status-view' : 'status-view'"></view>
			</view>
			<view class="space-view send-data-view">
				<text>版本号</text>
				<text>{{version}}</text>
			</view>
			<text
				style="font-size: 13; color: gray; margin-top: 15px;">{{status ? receiveSucceedRemark : receiveDataRemark}}</text>
		</view>

		<view style="padding: 20px 20px;">
			<button style="color: #ffffff; background-color: #000000;" v-show="status"
				@click="next()">{{$t('global.NextStep')}}</button>
		</view>

	</view>
</template>

<script>
	import { onConnectReadRSSIBut, onSendCommand } from '@/uni_modules/ace-bluetooth';
	import { on_insertTestDetailsDB, on_UTSupdateTestDetailsDB, on_fetchTestDetailsDB } from '@/uni_modules/ace-test-details'
	import TDModel from '@/models/TDModel.uts'

	export default {
		data() {
			return {
				title: "" as string | null,
				aceid: '',
				rssiTitle: this.$t('bluetoothDetails.SignalStrength'),
				rssiRemark: this.$t('bluetoothDetails.remark1'),
				receiveSendDataTitle: this.$t('bluetoothDetails.TransceivingFunction'),
				sendDataTitle: this.$t('bluetoothDetails.SendRemark'),
				receiveDataTitle: this.$t('bluetoothDetails.Receive'),
				receiveDataRemark: this.$t('bluetoothDetails.remark2'),
				receiveSucceedRemark: this.$t('bluetoothDetails.remark3'),
				interval: 0,
				rssi: 0,
				status: false,
				timeout: 0,
				version: ''
			}
		},
		onLoad(query) {
			this.title = query.title
			//创建测试记录数据
			this.aceid = 'ace_' + Date.now()
			console.log(this.aceid)
			on_insertTestDetailsDB(this.aceid, this.title)
		},

		onShow() {
			//获取蓝牙信号强度
			this.interval = setInterval(() => {
				onConnectReadRSSIBut((rssi) => {
					this.rssi = rssi
				})
			}, 1000);
		},

		onHide() {
			clearInterval(this.interval);
		},

		onUnload() {
			clearInterval(this.interval);
		},

		methods: {
			send() {
				//开启工厂模式,并测试收发功能
				onSendCommand("", "start", "", (res) => {
					console.log(res)
					let data = res["data"]
					this.version = data["version"] ?? ""
					this.status = true
					uni.hideLoading();
					clearTimeout(this.timeout)

					//先取再更新
					let model = new TDModel(on_fetchTestDetailsDB(this.aceid))
					console.log(model)
					if (Object.keys(model).length != 0) {
						model.rssi = this.rssi
						model.sAndr = true
						console.log(model)
						on_UTSupdateTestDetailsDB(this.aceid, JSON.stringify(model))
					}
				})
				uni.showLoading({
					title: this.$t('bluetoothDetails.toast'),
					mask: true
				})
				this.timeout = setTimeout(() => {
					clearTimeout(this.timeout)
					uni.hideLoading();
					uni.showToast({
						title: this.$t('bluetoothDetails.toast2'),
						icon: "error"
					})
				}, 15000);
			},
			next() {
				uni.navigateTo({
					url: `/pages/index/wheel-motor?title=${this.title}&aceid=${this.aceid}`
				})
			},
			quit() {
				//退出工厂模式
				onSendCommand("", "stop", "");
				uni.navigateBack({
					delta: 100,
					animationType: "slide-out-bottom"
				})
			}
		}
	}
</script>

<style lang="scss">
	.page {
		flex: 1;
		background-color: $uni-bg-color-hover;
	}

	.module-view {
		background-color: #ffffff;
		padding: 20px;
		width: 100%;
	}

	.title {
		color: black;
		font-size: 18;
		font-weight: bold;
	}

	.space-view {
		/* 水平居中 */
		align-items: center;
		/* 横向排列 */
		flex-direction: row;
		/* 两端布局 */
		justify-content: space-between;
	}

	.send-data-view {
		margin-top: 15px;
	}

	.status-view {
		margin-right: 15px;
		width: 20px;
		height: 20px;
		border-radius: 10px;
		background-color: #dedede;
	}

	.on-status-view {
		margin-right: 15px;
		width: 20px;
		height: 20px;
		border-radius: 10px;
		background-color: $uni-color-primary;
	}
</style>