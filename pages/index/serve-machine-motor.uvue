<template>
	<uni-navbar-lite :title="title" :is-back="true" :nc-color="'#f1f1f1'">
		<template v-slot:right>
			<button v-show="isShow" size="mini" style="width: 70px; padding: 0;"
				@click="quit">{{$t('global.ExitTest')}}</button>
		</template>
	</uni-navbar-lite>
	<view class="page">
		<view style="background-color: #ffffff; padding: 20px;">
			<text class="title">{{serveMachineMotorTitle}}</text>

			<view class="space-view">
				<text class="remark-text">上电机</text>
				<text class="">{{up_speed}}</text>
			</view>
			<slider style="margin: 0 5px;" :min="1" :max="10" :step="1" :block-size="25" activeBackgroundColor="#90E174"
				foreColor="#f1f1f1" :value="up_speed" @changing="up_speedSliderChangeing" />

			<view class="space-view">
				<text class="remark-text">下电机</text>
				<text class="">{{down_speed}}</text>
			</view>
			<slider style="margin: 0 5px;" :min="1" :max="10" :step="1" :block-size="25" activeBackgroundColor="#90E174"
				foreColor="#f1f1f1" :value="down_speed" @changing="down_speedSliderChangeing" />

			<text class="remark-text">(1-10代表1000-10000转，请用测速计进行测试)</text>
			<view class="button-view">
				<button :class="isTest ? 'btn' : 'long-btn-g'" @click="confirm">{{isTest ? '开始测试' : '停止测试'}}</button>
			</view>
		</view>

		<view style="padding: 20px 20px;" v-show="isShow">
			<button style="color: #ffffff; background-color: #000000;" @click="next">{{$t('global.NextStep')}}</button>
		</view>

	</view>
</template>

<script>
	import { onSendCommand } from '@/uni_modules/ace-bluetooth';
	import { on_UTSupdateTestDetailsDB, on_fetchTestDetailsDB } from '@/uni_modules/ace-test-details'
	import TDModel from '@/models/TDModel.uts'
	export default {
		data() {
			return {
				title: "蓝牙" as string | null,
				aceid: '',
				isShow: true,
				serveMachineMotorTitle: this.$t('serveMachineMotor.ServingMotor'),
				up_speed: 5,
				down_speed: 5,
				isTest: true
			}
		},

		onLoad(query) {
			this.title = query.title
			this.isShow = query.page != 'unit'
			this.aceid = query.aceid
		},

		onHide() {
			onSendCommand("shot_test", "stop", "");
		},

		onUnload() {
			onSendCommand("shot_test", "stop", "");
		},

		methods: {
			up_speedSliderChangeing(e : UniSliderChangeEvent) {
				this.up_speed = e.detail.value
			},

			down_speedSliderChangeing(e : UniSliderChangeEvent) {
				this.down_speed = e.detail.value
			},

			confirm() {
				this.isTest = !this.isTest
				if (this.isTest) {
					onSendCommand("shot_test", "stop", "");
					if (!this.isShow) {
						return
					}
					uni.showModal({
						title: '发球电机是否正常',
						cancelText: '异常',
						confirmText: '正常',
						success: (result) => {
							//先取再更新
							if (this.isShow) {
								let model = new TDModel(on_fetchTestDetailsDB(this.aceid))
								if (Object.keys(model).length != 0) {
									model.shot = result.confirm
									on_UTSupdateTestDetailsDB(this.aceid, JSON.stringify(model))
								}
							}
						}
					})
				} else {
					onSendCommand("shot_test", "start", {
						"up_speed": this.up_speed,
						"down_speed": this.down_speed
					});
				}
			},

			next() {
				uni.navigateTo({
					url: `/pages/index/steering-engine?title=${this.title}&aceid=${this.aceid}`
				})
			},
			quit() {
				//退出工厂模式
				onSendCommand("", "stop", "");
				uni.navigateBack({
					delta: 100,
					animationType: "slide-out-bottom"
				})
			}
		}
	}
</script>

<style lang="scss">
	.page {
		flex: 1;
		background-color: $uni-bg-color-hover;
	}

	.title {
		color: black;
		font-size: 18;
		font-weight: bold;
	}

	.space-view {
		/* 水平居中 */
		align-items: center;
		/* 横向排列 */
		flex-direction: row;
		/* 两端布局 */
		justify-content: space-between;
		// height: 40px;
		margin-top: 15px;
	}

	.remark-text {
		font-size: 13;
		line-height: 1.4;
		color: gray;
	}

	.button-view {
		align-items: center;
		justify-content: center;
		margin-top: 15px;
	}

	.btn {
		color: #000;
		border-color: black;
		border-width: 1px;
	}

	.long-btn-g {
		color: grey;
		border-color: grey;
		border-width: 1px;
	}
</style>