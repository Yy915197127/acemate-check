<template>
	<uni-navbar-lite :title="title" :is-back="true" :nc-color="'#f1f1f1'">
		<template v-slot:right>
			<button size="mini" style="width: 70px; padding: 0;" @click="quit">{{$t('global.ExitTest')}}</button>
		</template>
	</uni-navbar-lite>
	<view class="page">
		<view style="background-color: #ffffff; padding: 20px;">
			<text class="title">{{serveMachineMotorTitle}}</text>

			<view class="space-view">
				<text class="remark-text">上电机</text>
				<text class="">{{up_speed}}</text>
			</view>
			<slider :min="1" :max="10" :step="1" :block-size="25" activeBackgroundColor="#90E174" foreColor="#f1f1f1"
				:value="up_speed" @changing="up_speedSliderChangeing" />

			<view class="space-view">
				<text class="remark-text">下电机</text>
				<text class="">{{down_speed}}</text>
			</view>
			<slider :min="1" :max="10" :step="1" :block-size="25" activeBackgroundColor="#90E174" foreColor="#f1f1f1"
				:value="down_speed" @changing="down_speedSliderChangeing" />

			<text class="remark-text">(1-10代表1000-10000转，请用测速计进行测试)</text>
			<view class="button-view">
				<button class="btn" @click="confirm">{{$t('serveMachineMotor.Confirm')}}</button>
			</view>
		</view>

		<view style="padding: 30px 20px;">
			<button style="color: #ffffff; background-color: #000000;" @click="next">{{$t('global.NextStep')}}</button>
		</view>

	</view>
</template>

<script>
	import { onSendCommand } from '@/uni_modules/ace-bluetooth';
	export default {
		data() {
			return {
				title: "蓝牙" as string | null,
				aceid: '',
				serveMachineMotorTitle: this.$t('serveMachineMotor.ServingMotor'),
				up_speed: 5,
				down_speed: 5
			}
		},

		onLoad(query) {
			this.title = query.title
			this.aceid = query.aceid

			//用于测试
			//更新测试结果
			const success = ClassManager.updateClass(this.aceid, {
				shot: true
			})
			//用于测试

		},

		methods: {
			up_speedSliderChangeing(e : UniSliderChangeEvent) {
				this.up_speed = e.detail.value
			},

			down_speedSliderChangeing(e : UniSliderChangeEvent) {
				this.down_speed = e.detail.value
			},

			confirm() {
				onSendCommand("shot_test", "start", {
					"up_speed": this.up_speed,
					"down_speed": this.down_speed
				});
			},

			next() {
				onSendCommand("shot_test", "stop", "");
				uni.navigateTo({
					url: `/pages/index/steering-engine?title=${this.title}&aceid=${this.aceid}`
				})
			},
			quit() {
				//退出工厂模式
				//onSendCommand("", "stop", "");
				uni.navigateBack({
					delta: 100,
					animationType: "slide-out-bottom"
				})
			}
		}
	}
</script>

<style lang="scss">
	.page {
		flex: 1;
		background-color: $uni-bg-color-hover;
	}

	.title {
		color: black;
		font-size: 18;
		font-weight: bold;
	}

	.space-view {
		/* 水平居中 */
		align-items: center;
		/* 横向排列 */
		flex-direction: row;
		/* 两端布局 */
		justify-content: space-between;
		// height: 40px;
		margin-top: 15px;
	}

	.remark-text {
		font-size: 13;
		line-height: 1.4;
		color: gray;
	}

	.button-view {
		align-items: center;
		justify-content: center;
		margin-top: 15px;
	}

	.btn {
		// //width: 80px;
		border-color: black;
		border-width: 1px;
	}
</style>