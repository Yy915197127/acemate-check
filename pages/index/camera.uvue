<template>
	<uni-navbar-lite :title="title" :is-back="true" :nc-color="'#f1f1f1'">
		<template v-slot:right>
			<button v-show="isShow" size="mini" style="width: 70px; padding: 0;"
				@click="quit">{{$t('global.ExitTest')}}</button>
		</template>
	</uni-navbar-lite>
	<scroll-view class="page">
		<view style="background-color: #ffffff; padding: 20px;">
			<text class="title">{{cameraTitle}}</text>
			<text class="remark-text">{{tennisRemark}}</text>
			<view class="space-view">
				<text>{{$t('camera.Height')+height.toFixed(2)}}m</text>
				<text>{{$t('camera.Depth')+depth.toFixed(2)}}m</text>
				<text>{{$t('camera.LeftRight')+lr.toFixed(2)}}m</text>
			</view>
			<text class="remark-text">{{cameraRemark}}</text>
			<view class="long-btn-view">
				<button class="long-btn" @click="cameraButtonAction">{{isCamera ? "开始测试" : "停止检测"}}</button>
			</view>
		</view>
		<view style="padding: 20px 20px;" v-show="isShow">
			<button style="color: #ffffff; background-color: #000000;" @click="next">{{$t('global.NextStep')}}</button>
		</view>
	</scroll-view>
</template>

<script>
	import { onSendCommand } from '@/uni_modules/ace-bluetooth';
	import { on_UTSupdateTestDetailsDB, on_fetchTestDetailsDB } from '@/uni_modules/ace-test-details'
	import TDModel from '@/models/TDModel.uts'
	export default {
		data() {
			return {
				title: "蓝牙" as string | null,
				aceid: '',
				isShow: true,
				height: 0 as number,
				depth: 0 as number,
				lr: 0 as number,
				cameraTitle: this.$t('camera.Camera'),
				tennisRemark: this.$t('camera.Coordinates'),
				cameraRemark: this.$t('camera.StartTest'),
				cameraButton: this.$t('global.StartDetection'),
				isCamera: true
			}
		},

		onLoad(query) {
			this.title = query.title
			this.isShow = query.page != 'unit'
			this.aceid = query.aceid
		},

		onHide() {
			onSendCommand("camera_test", "stop", "")
		},

		onUnload() {
			onSendCommand("camera_test", "stop", "")
		},

		methods: {
			cameraButtonAction() {
				this.isCamera = !this.isCamera
				onSendCommand("camera_test", this.isCamera ? "stop" : "tennis_test", "", (res) => {

					if (res["action"] == "tennis_test") {
						let data = res["data"]
						this.height = data["y"] ?? 0
						this.depth = data["z"] ?? 0
						this.lr = data["x"] ?? 0
					} else {
						if (!this.isShow) {
							return
						}
						uni.showModal({
							title: '摄像头功能是否正常',
							cancelText: '异常',
							confirmText: '正常',
							success: (result) => {
								//先取再更新
								let model = new TDModel(on_fetchTestDetailsDB(this.aceid))
								if (Object.keys(model).length != 0) {
									model.camera = result.confirm
									on_UTSupdateTestDetailsDB(this.aceid, JSON.stringify(model))
								}
							}
						})
					}
				})
			},
			next() {
				uni.navigateTo({
					url: `/pages/index/wifi?title=${this.title}&aceid=${this.aceid}`
				})
			},
			quit() {
				//退出工厂模式
				//onSendCommand("", "stop", "");
				uni.navigateBack({
					delta: 100,
					animationType: "slide-out-bottom"
				})
			}
		}
	}
</script>

<style lang="scss">
	.page {
		flex: 1;
		background-color: $uni-bg-color-hover;
		padding-bottom: env(safe-area-inset-bottom);
	}

	.title {
		color: black;
		font-size: 18;
		font-weight: bold;
	}

	.space-view {
		/* 水平居中 */
		align-items: center;
		/* 横向排列 */
		flex-direction: row;
		/* 两端布局 */
		justify-content: space-between;
		margin-top: 15px;
	}

	.btn {
		width: 70px;
		border-color: black;
		border-width: 1px;
	}

	.long-btn-view {
		align-items: center;
		justify-content: center;
		margin-top: 15px;
	}

	.remark-text {
		font-size: 13;
		line-height: 1.4;
		color: gray;
		margin-top: 15px;
	}

	.long-btn {
		width: 220px;
		border-color: black;
		border-width: 1px;
	}
</style>