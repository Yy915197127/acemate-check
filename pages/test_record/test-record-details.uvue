<template>
	<uni-navbar-lite :title="title" :is-back="true" :nc-color="'#f1f1f1'">
		<template v-slot:right>
			<button size="mini" @click="addSnapshot">导出</button>
		</template>
	</uni-navbar-lite>

	<scroll-view class="page" id="snapshot-content" :show-scrollbar="showScrollbar">
		<view class="list-view">
			<text class="title">蓝牙</text>
			<view class="space-view">
				<text>设备名称:</text>
				<text>{{testDetails.name}}</text>
			</view>
			<view class="space-view">
				<text>信号强度:</text>
				<text>{{testDetails.rssi}}</text>
			</view>
			<view class="space-view">
				<text>收发功能:</text>
				<text
					:class="testDetails.sAndr ? 'test-succeed' : 'test-fall'">{{testDetails.sAndr ? '正常' : '异常'}}</text>
			</view>
		</view>

		<view class="list-view">
			<text class="title">电机</text>
			<view class="space-view">
				<text>行走电机:</text>
				<text
					:class="testDetails.wheel ? 'test-succeed' : 'test-fall'">{{testDetails.wheel ? '正常' : '异常'}}</text>
			</view>
			<view class="space-view">
				<text>发球电机:</text>
				<text :class="testDetails.shot ? 'test-succeed' : 'test-fall'">{{testDetails.shot ? '正常' : '异常'}}</text>
			</view>
		</view>

		<view class="list-view">
			<text class="title">IMU</text>
			<view class="space-view">
				<text>重力加速度:</text>
				<text
					:class="testDetails.highG ? 'test-succeed' : 'test-fall'">{{testDetails.highG ? '正常' : testDetails.HighG_remark.length != 0 ? testDetails.HighG_remark : "无数据"}}</text>
			</view>
			<view class="space-view">
				<text>陀螺仪:</text>
				<text
					:class="testDetails.gyroscope ? 'test-succeed' : 'test-fall'">{{testDetails.gyroscope ? '正常' : '异常'}}</text>
			</view>
		</view>

		<view class="list-view">
			<text class="title">舵机</text>
			<view class="space-view">
				<text>转盘舵机:</text>
				<text
					:class="testDetails.feeder_rotate ? 'test-succeed' : 'test-fall'">{{testDetails.feeder_rotate ? '正常' : '异常'}}</text>
			</view>
			<view class="space-view">
				<text>舱门舵机:</text>
				<text
					:class="testDetails.door_latch ? 'test-succeed' : 'test-fall'">{{testDetails.door_latch ? '正常' : '异常'}}</text>
			</view>
			<view class="space-view">
				<text>俯仰舵机:</text>
				<text
					:class="testDetails.launcher_pitch ? 'test-succeed' : 'test-fall'">{{testDetails.launcher_pitch ? '正常' : '异常'}}</text>
			</view>
		</view>

		<view class="list-view">
			<text class="title">压力传感器</text>
			<view class="space-view">
				<text>网球检测:</text>
				<text
					:class="testDetails.pressure ? 'test-succeed' : 'test-fall'">{{testDetails.pressure ? '正常' : '异常'}}</text>
			</view>
		</view>

		<view class="list-view">
			<text class="title">摄像头</text>
			<view class="space-view">
				<text>网球识别:</text>
				<text
					:class="testDetails.camera ? 'test-succeed' : 'test-fall'">{{testDetails.camera ? '正常' : '异常'}}</text>
			</view>
		</view>

		<view class="list-view">
			<text class="title">WiFi热点</text>
			<view class="space-view">
				<text>WiFi名称:</text>
				<text>{{testDetails.wifi_name}}</text>
			</view>
			<view class="space-view">
				<text>WiFi连接:</text>
				<text :class="testDetails.wifi ? 'test-succeed' : 'test-fall'">{{testDetails.wifi ? '正常' : '异常'}}</text>
			</view>
		</view>

		<view class="createdTime">
			<text>测试时间: {{testDetails.createdTime}}</text>
		</view>

	</scroll-view>
</template>

<script lang="uts">
	import TDModel from '@/models/TDModel.uts'
	export default {
		data() {
			return {
				title: "测试详情",
				testDetails: TDModel,
				snapImagePath: "",
				showScrollbar: true
			};
		},
		onLoad(options) {
			if (options.details) {
				this.testDetails = new TDModel(JSON.parse(options.details));
			}
		},
		methods: {
			addSnapshot() {
				this.showScrollbar = false
				uni.showLoading({
					title: "",
					mask: true
				})
				const view = uni.getElementById('snapshot-content')!
				view.takeSnapshot({
					success: (res) => {
						console.log(res.tempFilePath)
						this.snapImagePath = res.tempFilePath
						this.saveToAlbum()
						this.showScrollbar = true
					},
					fail: (res) => {
						console.log(res)
						uni.hideLoading();
						uni.showToast({
							icon: 'error',
							title: '导出失败'
						})
						this.showScrollbar = true
					}
				})
			},

			saveToAlbum() {
				uni.saveImageToPhotosAlbum({
					filePath: this.snapImagePath,
					success() {
						uni.hideLoading();
						uni.showToast({
							position: "center",
							icon: "none",
							title: "导出成功，请到手机相册查看"
						})
					},
					fail(e) {
						console.log(e)
						uni.hideLoading();
						uni.showModal({
							content: "导出失败，errCode：" + e.errCode + "，errMsg：" + e.errMsg + "，errSubject：" + e.errSubject,
							showCancel: false
						});
					}
				})
			}
		}
	}
</script>

<style lang="scss">
	.page {
		flex: 1;
		background-color: $uni-bg-color-hover;
		// padding-bottom: env(safe-area-inset-bottom);
	}

	.list-view {
		padding: 20px;
		background-color: white;
		margin-bottom: 15px;
	}

	.space-view {
		/* 横向排列 */
		flex-direction: row;
		/* 两端布局 */
		justify-content: space-between;
		/* 顶部对齐 */
		align-items: flex-start;
		margin-top: 10px;
	}

	.title {
		color: black;
		font-size: 18;
		font-weight: bold;
	}

	.test-succeed {
		color: green;
	}

	.test-fall {
		color: firebrick;
	}

	.createdTime {
		flex-direction: row;
		justify-content: flex-end;
		margin-bottom: 10px;
		padding: 0 20px;
	}
</style>