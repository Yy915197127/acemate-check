console.log('i18n utils test:::::::::::::::::::')
import { warn, error, isObject, isBoolean, isString, isPlainObject, isNull, isFunction, parseArgs, arrayFrom, hasOwn, merge, looseEqual } from '../util'

console.log('warn', warn('test warn'))
console.log('error', error('test error'))
console.log('isArray', isArray('test isArray'))
console.log('isObject', isObject({}))
console.log('isBoolean', isBoolean(false))
console.log('isString', isString('false'))
console.log('isPlainObject', isPlainObject({}))
console.log('isNull', isNull(null))
console.log('isFunction', isFunction(null))
console.log('parseArgs', parseArgs(1,2,23,5))
console.log('parseArgs', parseArgs('zh-CN'))
console.log('parseArgs', parseArgs({ a: 1, b: 2 }))
console.log('parseArgs', parseArgs('zh-CN', { a: 1, b: 2 }))
console.log('parseArgs', parseArgs({ a: 1, b: 2 }, 'zh-CN'))
console.log('arrayFrom', arrayFrom(new Set([1, 2, 3, 4, 5])))
console.log('hasOwn', hasOwn({ a: { b: 2 }, c: 3 }, 'a'))
console.log('hasOwn', hasOwn({ a: { b: 2 }, c: 3 }, 'd'))
console.log('merge', merge({ a: { b: 2 }, c: 3 }, { b: 2 }))
console.log('looseEqual', looseEqual(123,123))
console.log('looseEqual', looseEqual('hello','hello'))
console.log('looseEqual', looseEqual([1, 2, 3],[1, 2, 3]))
console.log('looseEqual', looseEqual([1, 2, 3],[1, 2, 4]))
console.log('looseEqual', looseEqual({},[1, 2, 4]))
console.log('looseEqual', looseEqual({},{}))
console.log('looseEqual', looseEqual({},{a:1}))
console.log('looseEqual', looseEqual({a:1},{a:1}))